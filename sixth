import numpy as np
from scipy import stats
import scipy as sp

A = np.array([
[11,12,13,14,15],
[21,22,23,24,25],
[31,32,33,34,35],
[41,42,43,44,45],
[51,52,53,54,55]])

print(np.shape(A))

print(A.ndim)

print(A.size)

print(A.data)


arr = np.array(A)
print(arr)
print(arr.shape)
print(arr.size)
print(arr.dtype)

print(arr[0])
print(arr[0, 1])
print(arr[:, 1])
print(arr[:2, 1])
print(arr[1, 1:3])

arr[:, 0] = [1, 2, 3, 4, 5]
print(arr)

arr[0, :] = [1, 2, 3, 4, 5]
print(arr)

# Three dimensional matrix

arr = np.zeros((6, 6, 6))
print(arr)


print(np.ones(5))
print(np.zeros(5)+1)
print(np.arange(5))
a = np.arange(5)
print(a * 2.0)
a = np.arange(5, dtype = np.float)
print(a)

print(np.arange(0, 10, 2))

a1 = np.array([1, 2, 3, 4, 5])
a2 = a1
print(a1[2])
a2[2] = 1231
print(a1)
a3 = a1.copy()
a3[2] = 9
print(a3)
print(a1)

a1 = np.array([5, 5, 5, 5, 5])
a2 = np.array([10, 10, 10, 10, 10])
print(a2/a1)
a = a2/a1
print(a.dtype)

a = np.arange(20)
index = [1, 5, 6, 4]
print(a[index])

# a = a * 2
# print(a[index])
#
# a = a / 2
# print(a[index])
#
# a = a % 2
# print(a[index])

a = a % 2 == 0
print(a)
print(a[index])

arr1 = np.array([9, 8, 7])
arr2 = np.array([2, 5, 9])
print(arr1+arr2)
print(arr1-arr2)
print(arr1*arr2)

a2 = np.array([10, 10, 10, 10, 10])
print(a2.sum())
print(np.sum(a2))
print(np.sin(a2))

a = np.array([[9, 8], [7, 6]])
print(a.transpose())
print(np.transpose(a))
print(a.__invert__())
print(np.invert(a))
print(np.eye(3))

arr3 = np.array([[0, -1], [1, 0]], dtype=float)
print(np.dot(arr3, arr3))
print(a.dot(arr3, arr3))

arr = np.array([9, 8, 7, 6])
print(np.median(arr))

arr = np.array([[3, 1, 2, 1], [4, 4, 1, 7]], dtype=float)
print(np.corrcoef(arr))
print(np.cov(arr))

# Creating Matrix by passing an array
arr = np.array([[1, 9], [2, 8]])
mat = np.mat(arr)
print(type(mat))
print(mat)

print(np.asmatrix(arr))
print(type(np.asmatrix(arr)))
print(arr[0])
print(type(arr[0]))
print(mat[0])
print(type(mat[0]))

print(arr*arr)

# mat * mat
print(mat*mat)
# mat**4 is equal to mat * mat * mat * mat
print(mat ** 4)
print(mat)
print(mat.T)
print(mat.I)

m = np.matrix("[1 2 3; 4 5 6")
print(m)
print(type(m))


#  Scipy

V = sp.randn(50)
print(V)
print(len(V))
print(V.mean())
print(V.min())
print(V.var())
print(V.std())

print(stats.describe(V))

#  Linear Algebra
'''
x+10y+7z = 12
2x+4y+2z = 7
9x+2y+8z = 5
'''

A = np.matrix('[1 10 7; 2 4 2; 9 2 8')
B = np.matrix('[12; 7; 5]')
print(A)
print(B)

print(sp.linalg.solve(A, B))

A = np.mat('[1 3 5; 2 5 1; 2 3 8]')
print(A)
print(sp.linalg.det(A))